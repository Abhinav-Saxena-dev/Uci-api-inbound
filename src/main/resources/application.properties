spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

# Kafka
spring.kafka.bootstrap-servers=${BOOTSTRAP_SERVERS}
spring.kafka.properties.schema.registry.url=${REGISTRY_URL}
campaign=${KAFKA_CAMPAIGN_TOPIC}
inboundUnprocessed=${KAFKA_INBOUND_UNPROCESSED_TOPIC}
inboundProcessed=${KAFKA_INBOUND_PROCESSED_TOPIC}
gupshup-opted-out=${KAFKA_INBOUND_GS_OPTED_OUT_TOPIC}
inbound-error=${KAFKA_INBOUND_ERROR_TOPIC}
outbound=${KAFKA_OUTBOUND_TOPIC}
messageReport=${KAFKA_MESSAGE_REPORT_TOPIC}
notificationInboundProcessed=${KAFKA_NOTIFICATION_INBOUND_PROCESSED}
kafka.logs.topic = logs

# Cassandra
spring.data.cassandra.contactpoints=${CASSANDRA_URL}
spring.data.cassandra.port=${CASSANDRA_PORT}
spring.data.cassandra.keyspace-name=${CASSANDRA_KEYSPACE}
spring.data.cassandra.local-datacenter=datacenter1
logging.level.root=INFO
logging.config=classpath:logback-spring.xml
spring.data.cassandra.request.timeout=120000
spring.data.cassandra.connect-timeout-millis=10000
spring.data.cassandra.read-timeout-millis=10000
spring.data.cassandra.connect-timeout=10000
spring.data.cassandra.read-timeout=10000
spring.data.cassandra.pool.heartbeat-interval=30s
spring.data.cassandra.pool.max-queue-size=2000
spring.data.cassandra.pool.idle-timeout=30s
spring.data.cassandra.pool.pool-timeout=30s
spring.data.cassandra.advanced.control-connection.timeout=10s
spring.data.cassandra.advanced.metadata.schema.request-timeout=30s
spring.data.cassandra.basic.request.timeout=30s

# For async timeout exception
spring.mvc.async.request-timeout=-1

# For removing trace from api response
server.error.include-stacktrace=never

# Enable compression
server.compression.enabled=true
server.compression.mime-types=application/json

server.port=8085

provider.gupshup.whatsapp.appname=Ekstep
campaign.url = ${CAMPAIGN_URL}
campaign.admin.token = ${CAMPAIGN_ADMIN_TOKEN}

fusionauth.url = ${FUSIONAUTH_URL}
fusionauth.key = ${FUSIONAUTH_KEY}

# XMessage user data before hours from local current time - float value allowed 
xmessage.user.data.before.hours=20.5

#Caffeine Cache
caffeine.cache.max.size=${CAFFEINE_CACHE_MAX_SIZE:#{1000}}
#caffeine.cache.max.size=0
caffeine.cache.exprie.duration.seconds=${CAFFEINE_CACHE_EXPIRE_DURATION:#{300}}

#Redis
spring.redis.db=${REDIS_DB_INDEX:#{1}}
spring.redis.host=${REDIS_HOST:#{"localhost"}}
spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
spring.redis.number.port=${REDIS_PORT:#{6379}}
spring.redis.sentinel.master= # Name of Redis server.
spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
spring.redis.timeout=0
# This time in seconds and we are default set 60*60 = 3600 -> 1 Hour
redis.key.timeout=${REDIS_KEY_TIMEOUT:#{3600}}

#Env
spring.profile.env=${ENV}

#CDN Minio
cdn.minio.login.id=${CDN_MINIO_LOGIN_ID:#{"loginId"}}
cdn.minio.password=${CDN_MINIO_PASS:#{"pass"}}
cdn.minio.application.id=${CDN_MINIO_APP_ID:#{"2011a6c9-7fb7-4306-8c6d-c96cb07c7812"}}
cdn.minio.bucket.id=${CDN_MINIO_BUCKET_ID:#{"bucketId"}}
cdn.minio.url=${CDN_MINIO_URL:#{"https://cdn.example.io/"}}
cdn.minio.fa.key=${CDN_MINIO_FA_KEY:#{"https://fa.example.io/"}}
cdn.minio.fa.url=${CDN_MINIO_FA_URL:#{"fakey"}}

#Azure Storage
spring.azure.blob.store.account.name=${AZURE_BLOB_STORE_ACCOUNT_NAME:#{"name"}}
spring.azure.blob.store.account.key=${AZURE_BLOB_STORE_ACCOUNT_KEY:#{"key"}}
spring.azure.blob.store.container.name=${AZURE_BLOB_STORE_CONTAINER:#{"container"}}

#Max File Size for Media (in MB)
maxSizeForImage = ${MAX_SIZE_FOR_IMAGE:#{"5"}}
maxSizeForAudio = ${MAX_SIZE_FOR_AUDIO:#{"5"}}
maxSizeForVideo = ${MAX_SIZE_FOR_VIDEO:#{"5"}}
maxSizeForDocument = ${MAX_SIZE_FOR_DOCUMENT:#{"5"}}

#CDAC Config
cdac.base.url=${CDAC_BASE_URL:#{""}}

#file cdn config
file.cdn.selected=${SELECTED_FILE_CDN:#{"azure"}}

#sunbird media config
sunbird.cloud.media.storage.type=${SUNBIRD_CLOUD_MEDIA_STORAGE_TYPE:#{""}}
sunbird.cloud.media.storage.key=${SUNBIRD_CLOUD_MEDIA_STORAGE_KEY:#{""}}
sunbird.cloud.media.storage.secret=${SUNBIRD_CLOUD_MEDIA_STORAGE_SECRET:#{""}}
sunbird.cloud.media.storage.url=${SUNBIRD_CLOUD_MEDIA_STORAGE_URL:#{""}}
sunbird.cloud.media.storage.container=${SUNBIRD_CLOUD_MEDIA_STORAGE_CONTAINER:#{""}}

spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB


# Email Config
spring.mail.host=${EMAIL_HOST:#{""}}
spring.mail.port=${EMAIL_PORT:#{"587"}}
spring.mail.username=${EMAIL_USERNAME:#{""}}
spring.mail.password=${EMAIL_PASSWORD:#{""}}
spring.mail.recipient=${RECIPIENT_EMAILS:#{""}}

# Static User Segment For Testing Purpose
test.user.segment.json1=${TEST_USER_SEGMENT_JSON:#{""}}
test.user.segment.json2=${TEST_USER_SEGMENT_JSON2:#{""}}

# BotService WebClient Configurations
webclient.interval=${WEBCLIENT_INTERVAL:#{5000}}
webclient.retryMaxAttempts=${WEBCLIENT_RETRY_MAX_ATTEMPTS:#{3}}
webclient.retryMinBackoff=${WEBCLIENT_RETRY_MIN_BACK_OFF:#{5}}

# Caffine static auth key
spring.caffeine.authorization.key=${AUTHORIZATION_KEY_TRANSACTION_LAYER}

# Postgres User Analytics Config
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
spring.r2dbc.initialization-mode=always
analytics.spring.r2dbc.host=${ANALYTICS_POSTGRES_HOST:#{""}}
analytics.spring.r2dbc.port=${ANALYTICS_POSTGRES_PORT:#{"5432"}}
analytics.spring.r2dbc.dbname=${ANALYTICS_POSTGRES_NAME:#{""}}
spring.r2dbc.url=r2dbc:postgresql://${ANALYTICS_POSTGRES_HOST}:${ANALYTICS_POSTGRES_PORT}/${ANALYTICS_POSTGRES_NAME}
analytics.spring.r2dbc.username=${ANALYTICS_POSTGRES_USERNAME:#{""}}
analytics.spring.r2dbc.password=${ANALYTICS_POSTGRES_PASSWORD:#{""}}
# R2DBC Pool Configuration
spring.r2dbc.initialSize=${ANALYTICS_POSTGRES_POOL_INITIAL_SIZE:#{"1"}}
spring.r2dbc.maxSize=${ANALYTICS_POSTGRES_POOL_MAX_SIZE:#{50}}
spring.r2dbc.maxIdleTime=${ANALYTICS_POSTGRES_POOL_MAX_IDLE_TIME:#{1800000}}

#liquibase configuration
spring.liquibase.change-log=classpath:db/changelog-master.xml
spring.liquibase.enabled=true
#spring.liquibase.contexts=test
spring.liquibase.user=${ANALYTICS_POSTGRES_USERNAME}
spring.liquibase.password=${ANALYTICS_POSTGRES_PASSWORD}
spring.liquibase.url=jdbc:postgresql://${ANALYTICS_POSTGRES_HOST}:${ANALYTICS_POSTGRES_PORT}/${ANALYTICS_POSTGRES_NAME}